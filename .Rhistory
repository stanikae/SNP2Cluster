if (!require("pacman", quietly = TRUE)){
install.packages("pacman")
library(pacman)
}
source("~/GitHub/SNP2Cluster/scripts/pacman_install_packages.R")
pacman::p_load(
tidyverse,
readxl,
# ComplexHeatmap,
remotes,
ggplot2,
colorRamp2,
ggalt,
lubridate,
RColorBrewer,
openxlsx,
tidyHeatmap,
naniar,
glue,
readr,
adegenet,
ape,
igraph,
readxl,
ggrepel,
ggtext,
factoextra,
# ggtree,
visNetwork,
networkD3
)
pacman::p_load(
tidyverse,
readxl,
# ComplexHeatmap,
remotes,
ggplot2,
colorRamp2,
ggalt,
lubridate,
RColorBrewer,
openxlsx,
# tidyHeatmap,
naniar,
glue,
readr,
adegenet,
ape,
igraph,
readxl,
ggrepel,
ggtext,
factoextra,
# ggtree,
visNetwork,
networkD3,
BiocManager
)
if (!require("ComplexHeatmap", quietly = TRUE)){
BiocManager::install("ComplexHeatmap")
library(ComplexHeatmap)
}
if (!require("tidyHeatmap", quietly = TRUE)){
BiocManager::install("tidyHeatmap")
library(tidyHeatmap)
}
if (!require("ggtree", quietly = TRUE)){
BiocManager::install("ggtree")
library(ggtree)
}
library(tidyHeatmap)
if (!require("tidyHeatmap", quietly = TRUE)){
install.packages("tidyHeatmap")
library(tidyHeatmap)
}
rm(list=ls())
snpco=25    # Preferred SNP threshold
daysco=45   # Time interval in days
conf_file="test_config.R"
source(paste0("C:/Users/stanfordk/Documents/TEST/",conf_file))
conf_file="test_config.R"
source(paste0("C:/Users/stanfordk/Documents/TEST/",conf_file))
conf_file
paste0("C:/Users/stanfordk/Documents/TEST/",conf_file)
source(paste0("C:/Users/stanfordk/Documents/TEST/",conf_file))
# Set-up the environment --------------------------------------------------
source(file.path(src_path,"scripts","pacman_install_packages.R"))
source(paste0("C:/Users/stanfordk/Documents/TEST/",conf_file))
source(file.path("C:/Users/stanfordk/Documents/TEST/",conf_file))
source(file.path("C:/Users/stanfordk/Documents/TEST",conf_file))
normalizePath(path.expand("C:/Users/stanfordk/Documents/TEST")
)
normalizePath(path.expand("C:/Users/stanfordk/Documents/TEST/")
)
normalizePath(path.expand("C:/Users/stanfordk/Documents/TEST/test_config.R")
)
source("~/GitHub/SNP2Cluster/run_analysis.R")
if (!require("tidyverse", quietly = TRUE)){
install.packages("tidyverse")
library(tidyverse)
}
normalizePath(path.expand("C:/Users/stanfordk/Documents/TEST/test_config.R")
)
# NOTES -------------------------------------------------------------------
# rm(list=ls())
# Get path to conf file and set it under the "Source conf file" section below
thisPath <- function() {
cmdArgs <- commandArgs(trailingOnly = FALSE)
if (length(grep("^-f$", cmdArgs)) > 0) {
# R console option
normalizePath(dirname(cmdArgs[grep("^-f", cmdArgs) + 1]))[1]
} else if (length(grep("^--file=", cmdArgs)) > 0) {
# Rscript/R console option
scriptPath <- normalizePath(dirname(sub("^--file=", "", cmdArgs[grep("^--file=", cmdArgs)])))[1]
} else if (Sys.getenv("RSTUDIO") == "1") {
# RStudio
dirname(rstudioapi::getSourceEditorContext()$path)
} else if (is.null(attr(stub, "srcref")) == FALSE) {
# 'source'd via R console
dirname(normalizePath(attr(attr(stub, "srcref"), "srcfile")$filename))
} else {
stop("Cannot find file path")
}
}
MainDirPath <- thisPath()
src_path <- file.path(MainDirPath)
setwd(src_path)
# source("./conf/KPN_Temb_BabyGERMS_config.R")
if(exists("conf_file")){
source(paste0("./conf/",conf_file))
}else{
stop("Provide path to the config file, refer to Step 4b in usage instructions", call. = FALSE)
}
conf_file
exists("conf_file")
source(paste0("./conf/",conf_file))
rm(list=ls())
conf_file="test_config.R"
source("~/GitHub/SNP2Cluster/run_analysis.R")
getwd()
rm(list=ls())
if (!require("tidyverse", quietly = TRUE)){
install.packages("tidyverse")
library(tidyverse)
}
# NOTES -------------------------------------------------------------------
# rm(list=ls())
# Get path to conf file and set it under the "Source conf file" section below
thisPath <- function() {
cmdArgs <- commandArgs(trailingOnly = FALSE)
if (length(grep("^-f$", cmdArgs)) > 0) {
# R console option
normalizePath(dirname(cmdArgs[grep("^-f", cmdArgs) + 1]))[1]
} else if (length(grep("^--file=", cmdArgs)) > 0) {
# Rscript/R console option
scriptPath <- normalizePath(dirname(sub("^--file=", "", cmdArgs[grep("^--file=", cmdArgs)])))[1]
} else if (Sys.getenv("RSTUDIO") == "1") {
# RStudio
dirname(rstudioapi::getSourceEditorContext()$path)
} else if (is.null(attr(stub, "srcref")) == FALSE) {
# 'source'd via R console
dirname(normalizePath(attr(attr(stub, "srcref"), "srcfile")$filename))
} else {
stop("Cannot find file path")
}
}
MainDirPath <- thisPath()
src_path <- file.path(MainDirPath)
setwd(src_path)
# source("./conf/KPN_Temb_BabyGERMS_config.R")
if(exists("conf_file")){
source(paste0("./conf/",conf_file))
}else{
stop("Provide path to the config file, refer to Step 4b in usage instructions", call. = FALSE)
}
exists("conf_file")
conf_file="test_config.R"
if (!require("tidyverse", quietly = TRUE)){
install.packages("tidyverse")
library(tidyverse)
}
# NOTES -------------------------------------------------------------------
# rm(list=ls())
# Get path to conf file and set it under the "Source conf file" section below
thisPath <- function() {
cmdArgs <- commandArgs(trailingOnly = FALSE)
if (length(grep("^-f$", cmdArgs)) > 0) {
# R console option
normalizePath(dirname(cmdArgs[grep("^-f", cmdArgs) + 1]))[1]
} else if (length(grep("^--file=", cmdArgs)) > 0) {
# Rscript/R console option
scriptPath <- normalizePath(dirname(sub("^--file=", "", cmdArgs[grep("^--file=", cmdArgs)])))[1]
} else if (Sys.getenv("RSTUDIO") == "1") {
# RStudio
dirname(rstudioapi::getSourceEditorContext()$path)
} else if (is.null(attr(stub, "srcref")) == FALSE) {
# 'source'd via R console
dirname(normalizePath(attr(attr(stub, "srcref"), "srcfile")$filename))
} else {
stop("Cannot find file path")
}
}
MainDirPath <- thisPath()
src_path <- file.path(MainDirPath)
setwd(src_path)
# source("./conf/KPN_Temb_BabyGERMS_config.R")
if(exists("conf_file")){
source(paste0("./conf/",conf_file))
}else{
stop("Provide path to the config file, refer to Step 4b in usage instructions", call. = FALSE)
}
exists("conf_file")
conf_file
source(paste0("./conf/",conf_file))
getwd()
paste0("./conf/",conf_file)
source(paste0("./conf/",conf_file))
source("run_analysis.R")
rm(list=ls())
source(paste0("./conf/",conf_file))
conf_file="test_config.R"
conf_file
source("run_analysis.R")
rlang::last_trace()
